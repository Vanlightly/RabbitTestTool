[agent]
  hostname = "{{ hostname }}"
  flush_interval = "15s"
  interval = "5s"


# Input Plugins
[[inputs.cpu]]
    percpu = true
    totalcpu = true
    collect_cpu_time = false
    report_active = false
[[inputs.disk]]
    ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
[[inputs.diskio]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.system]]
[[inputs.swap]]
[[inputs.netstat]]
[[inputs.processes]]
[[inputs.kernel]]

[[inputs.filecount]]
  directories = ["{{ location_wal }}/wal", "{{ location_quorum }}/quorum"]
  ## Only count files that match the name pattern. Defaults to "*".
  name = "*.wal"

  ## Count files in subdirectories. Defaults to true.
  recursive = true

  ## Only count regular files. Defaults to true.
  regular_only = true

  ## Follow all symlinks while walking the directory tree. Defaults to false.
  follow_symlinks = false

  ## Only count files that are at least this size. If size is
  ## a negative number, only count files that are smaller than the
  ## absolute value of size. Acceptable units are B, KiB, MiB, KB, ...
  ## Without quotes and units, interpreted as size in bytes.
  size = "0B"

  ## Only count files that have not been touched for at least this
  ## duration. If mtime is negative, only count files that have been
  ## touched in this duration. Defaults to "0s".
  mtime = "0s"

[[inputs.rabbitmq]]
  username = "{{ rabbitmq_username }}"
  password = "{{ rabbitmq_password }}"
  interval = "15s"

[[inputs.prometheus]]
  ## An array of urls to scrape metrics from.
  urls = ["http://localhost:15692/metrics"]
  interval = "30s"
  response_timeout = "25s"

# Output Plugin InfluxDB
[[outputs.influxdb]]
  database = "{{ influx_db_name }}"
  urls = [ "{{ influx_url }}" ]
  username = "{{ influx_username }}"
  password = "{{ influx_password }}"